
Andre-Jacques de Beer
Machine Design Homework 2, Problem 1


% wrote two functions: 'center_point' and 'circle_point'


type circle_point

function [cx cy] = circle_point(a1x,a2x,a3x,a1y,a2y,a3y)

% this function finds the equation of line
% between two points, the midpoint of those two points
% and the equation of the line running perpendicular to
% that line and intersecting that midpoint
% the program will do that between points a1 and a2, 
% a2 and a3 and will look at the
% the point at which the perp. bisectors intersect for
% the center-point, a

% does not work if points are all in line with each other
% because their perpendicular bisectors cannot intersect

    function [a b] = perpline(x1,y1,x2,y2)
          % find the equation of a line runnin perpendicularly
          % through the midpoint of two sets of coordinates
          mx = (x1 + x2)/2;
          my = (y1 + y2)/2;        
          areg = (y2 - y1)/(x2 - x1);
          a = -1/areg;
          b = my - a*mx;  
          if(areg == 0)
              a = 'x_only';
              b = mx;
          end
    end

    [a1 b1] = perpline(a1x,a1y,a2x,a2y);
    
    [a2 b2] = perpline(a2x,a2y,a3x,a3y);
    
    if (strcmp(a1,'x_only') || strcmp(a2,'x_only'))
        if (strcmp(a1,'x_only'))
            cx = b1;
            cy = a2 * cx + b2;
        end
        if (strcmp(a2,'x_only'))
            cx = b2;
            cy = a1 * cx + b1;
        end        
    else
        cx = (b2 - b1)*(a1 - a2)^-1;
        cy = a1*cx + b1;
    end
    
end




type center_point

function [c1x c1y] = center_point(a1x,a1y,a2y,a3y,b1x,b2x,b3x,b1y,b2y,b3y,cx,cy)

%triangle A3-B3-C* is congruent to triangle A1-B1-C3
%use this fact to get the coordinates of C3

B1A1 = sqrt((b1x-a1x)^2 + (b1y-a1y)^2);

%get the rotation
theta = -(acos((a1y-b1y)/(B1A1))-acos((a3y - b3y)/(B1A1)));
%get the translation
b3t = [cos(theta), -sin(theta);sin(theta),cos(theta)]*[b3x;b3y];
b3xt = b3t(1);
b3yt = b3t(2);
%apply rotation and translation to c*
c3 = [cos(theta), -sin(theta);sin(theta),cos(theta)]*[cx;cy]-[b3xt-b1x;b3yt-b1y];
c3x = c3(1);
c3y = c3(2);



%triangle A2-B2-C* is congruent to triangle A1-B1-C2
%use this fact to get the coordinates of C2


%get the rotation
alpha = -(acos((a1y-b1y)/(B1A1))-acos((a2y - b2y)/(B1A1)));
%get the translation
b2t = [cos(alpha), -sin(alpha);sin(alpha),cos(alpha)]*[b2x;b2y];
b2xt = b2t(1);
b2yt = b2t(2);
%apply rotation and translation to c*
c2 = [cos(alpha), -sin(alpha);sin(alpha),cos(alpha)]*[cx;cy]-[b2xt-b1x;b2yt-b1y];
c2x = c2(1);
c2y = c2(2);



%call function circle_point to find the circle point from
%the coordinate pairs from C2, C3, and C*

[c1x c1y] = circle_point(c2x,c3x,cx,c2y,c3y,cy);

    
end





a1x=6; a1y=4.3; a2x=2; a2y=3; a3x=-2; a3y=3;
b1x = a1x-6; b1y=a1y; b2x = a2y; b2y=a2y-6; b3x=a3x; b3y=a3y-6;




[c1x c1y] = center_point(a1x,a1y,a2y,a3y,b1x,b2x,b3x,b1y,b2y,b3y,cx,cy)

c1x =

   -0.9150


c1y =

    4.3000



[Ax Ay] = circle_point(a1x,a2x,a3x,a1y,a2y,a3y)

Ax =

     0


Ay =

   15.9577


